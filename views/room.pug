extends layout

block content
	div#dashboard
	div.container
		div.row
			div.medium-6.medium-offset-1.columns
				div.chat-window
					h3#room-name #{roomName} 
						small(style='font-size:14px') [#{roomId}]
					ul#messages(style='height: 300px; overflow-y: scroll;')
						each message in messages
							li(style='list-style:none') #{message.userId}: #{message.message} 
				div.chat-input
					form#message
						input.validate(id='message', type='text', name='message')
						input.button(type='submit', value='Send')

			div.medium-3.columns(style='min-height:300px; border: 1px solid black;')
				div.user-search
					form
						label Find Users and Invite
							input#user-search.validate(type='text', name='query')
				div#users-list

	script.
		var socketUrl = '#{socketUrl}';
		var roomId = '#{roomId}';
		var userId = '#{currentUser}';

	script(src='http://localhost:8080/static/bundle.js')
	script.
		(function(){
			$(document).ready(function(){
				$('#messages').scrollTop($('#messages')[0].scrollHeight);

				//Chat
				var socket = io.connect('#{socketUrl}'+ ':3000');
				var roomId = '#{roomId}'
				var userId = '#{currentUser}'

				//socket channel name is roomId
				socket.emit('join-chat', roomId)

				$('#message').submit(function(e){
					e.preventDefault();
					var payload = {
						message: e.target.message.value,
						userId: userId,
						sentAt: new Date(),
						roomId: roomId
					}
					socket.emit('message', payload, function() {
						addMessage(payload);
					});
					e.target.message.value = '';
				});

				socket.on('broadcast', function(payload) {
					addMessage(payload);
				});

				socket.on('error', function(err) {
					addMessage('Error: ' + err);
				});

				function addMessage(payload) {
					$('<li>' + payload.userId + ': ' + payload.message + '</li>').appendTo('#messages')
					$('#messages').scrollTop($('#messages')[0].scrollHeight);
				}

				//Search
				$('#user-search').keyup(function(e) {
					e.preventDefault();
					var query = e.target.value
					$.ajax({
						type: 'POST',
						url: '/search/users',
						data: {
							query: query
						},
						dataType: 'text	',
						beforeSend: function() {
						 	$('#users-list').empty();
						},
						success: function (payload) {
							addUser(payload);
						}
					})
				});

				function addUser(payload) {
					var payload = JSON.parse(payload);
					// check to see if any results
					if (payload.length < 1) { return }


					var inviteeInfo = {
						userId: payload[0]._id,
						email: payload[0].email,
						firstName: payload[0].firstName,
						lastName: payload[0].lastName
					}

					//create new link to add user
					$('<a href="#"></a>')
					.click(function() { inviteUser(inviteeInfo) })
					.text('Invite: ' + inviteeInfo.firstName + ' ' + inviteeInfo.lastName + '  [' + inviteeInfo.email + ']')
					.appendTo('#users-list');
				}

				//Invite user
				function inviteUser(inviteeInfo) {
					var payload = {
						sender: '#{currentUser}',
						invitee: inviteeInfo,
						roomId:  roomId,
						roomName: $('#room-name').clone().children().remove().end().text()
					}
					socket.emit('send-invitation', payload)	
				}
			});
		})($);